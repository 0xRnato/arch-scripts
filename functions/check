#!/bin/bash

# Check if command failed, if true abort
function check_fail {
	if [[ $EXITSTATUS != 0 ]]; then
		echo_message error "Last command returned an error; something may have went wrong. Aborting..." && sleep 2 && exit 99
	fi
}

# Check for and install required packages for this script set.
function check_dependencies {
	# Check list
	DEPS=$(dirname "$0")'/data/dependencies.list'
	for PACKAGE in $(cat $DEPS); do
		echo_message info "Installing '$PACKAGE'. Proceeding."
		# Admin privileges
		sudo pacman -S $PACKAGE
		echo_message success "Package '$PACKAGE' installed. Proceeding."
	done
	echo_message success "Dependencies are installed. :)"
	echo "Proceeding."
}

# Check if current user is in the sudo group
function check_privileges {
	# Check if user is root
	if [[ $EUID != 0 ]]; then
		EXITSTATUS=$(sudo -l | grep -q '(ALL) ALL'; echo $?)
		if [[ $EXITSTATUS != 0 ]]; then
			echo_message error "Your user account doesn't have authorization to use these scripts with this computer. Log in as root or as a user with admin privileges."
			echo_message info "Exiting..."
			sleep 5 && exit 99
		fi
		# Current user can use 'sudo'
		echo_message success "Current user has sudo privileges. :)"
		echo "Proceeding."
		SUDOCMD="sudo"
	else
		# Display warning about being root user
		echo_message warning "You are logged in as the root user. This is not recommended. :/"
		if (whiptail --title "Root User" --yesno "You are logged in as the root user. This is mostly fine, but not recommended.\n\nAre you sure you want to proceed?" 8 64) then
			echo "Proceeding."
			SUDOCMD=
		else
			echo "Exiting..."
			exit 99
		fi
	fi
}

function check {
	# Check
	echo_message title "Starting 'check' function..."
	# Check sudo
	echo_message info "Checking administrative privileges of current user..."
	check_privileges
	# Check dependencies
	echo_message info "Checking if dependencies are installed..."
	check_dependencies
	# Done
	echo_message success "Check complete."
}